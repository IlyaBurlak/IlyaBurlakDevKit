name: CI - Test and Coverage

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: Test on Node ${{ matrix.node-version }} (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        node-version: [14.x, 16.x, 18.x, 20.x]
      fail-fast: false

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run tests with coverage
        run: npm test -- --coverage

      - name: Upload coverage to Coveralls
        uses: coverallsapp/github-action@v2
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          flag-name: ${{ matrix.os }}-node-${{ matrix.node-version }}

      - name: Notify on failure
        if: ${{ failure() }}
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            try {
              // –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ PR
              const pr = context.payload.pull_request
              if (pr) {
                await github.rest.issues.createComment({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  issue_number: pr.number,
                  body: `üö® –¢–µ—Å—Ç—ã –Ω–µ –ø—Ä–æ—à–ª–∏ –Ω–∞ ${process.platform} (Node ${process.version})\n` +
                         `–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –æ—Ç—á—ë—Ç: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}`
                })
              }
            
              // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –¥–ª—è –∫–æ–º–º–∏—Ç–æ–≤ –±–µ–∑ PR
              else {
                const commitUrl = `${{ github.server_url }}/${{ github.repository }}/commit/${{ github.sha }}`
                await github.repos.createCommitComment({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  commit_sha: "${{ github.sha }}",
                  body: `‚ùå –¢–µ—Å—Ç—ã –Ω–µ –ø—Ä–æ—à–ª–∏!\n` +
                         `–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –æ—Ç—á—ë—Ç: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}\n` +
                         `–°—Å—ã–ª–∫–∞ –Ω–∞ –∫–æ–º–º–∏—Ç: ${commitUrl}`
                })
              }
            } catch (error) {
              core.warning(`Failed to create comment: ${error.message}`)
            }

  coverage-finalize:
    name: Finalize coverage report
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Finalize Coveralls processing
        uses: coverallsapp/github-action@v2
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          parallel-finished: true